> use demo
switched to db demo
> show collections
client
department
employee
> db.stats()
{
        "db" : "demo",
        "collections" : 3,
        "views" : 0,
        "objects" : 5,
        "avgObjSize" : 80.4,
        "dataSize" : 402,
        "storageSize" : 77824,
        "indexes" : 3,
        "indexSize" : 77824,
        "totalSize" : 155648,
        "scaleFactor" : 1,
        "fsUsedSize" : 286404390912,
        "fsTotalSize" : 322276683776,
        "ok" : 1
}
> db.listCommends()
uncaught exception: TypeError: db.listCommends is not a function :
@(shell):1:1
> db.listCommands()
_addShard:  adminOnly
  Internal command, which is exported by shards. Do not call directly. Adds a new shard to a cluster.
_cloneCollectionOptionsFromPrimaryShard:
  Internal command, do not call directly. Creates a collection on a shard with UUID existing on primary.
_configsvrAbortReshardCollection:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Aborts any in-progress resharding operations for this collection.
_configsvrAddShard:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Validates and adds a new shard to the cluster.
_configsvrAddShardToZone:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Validates and adds a new zone to the shard.
_configsvrBalancerCollectionStatus:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Checks whether the chunks of a given collection are in a quiesced state or there are any which need to be moved because of (1) draining shards, (2) zone violation or (3) imbalance between shards.
_configsvrBalancerStart:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Controls the balancer state.
_configsvrBalancerStatus:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Controls the balancer state.
_configsvrBalancerStop:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Controls the balancer state.
_configsvrCleanupReshardCollection:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Aborts and cleans up any in-progress resharding operations for this collection.
_configsvrClearJumboFlag:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Clears the jumbo flag of the chunk specified.
_configsvrCommitChunkMerge:  adminOnly
  Internal command, which is sent by a shard to the sharding config server. Do not call directly. Receives, validates, and processes a MergeChunkRequest
_configsvrCommitChunkMigration:  adminOnly
  should not be calling this directly
_configsvrCommitChunkSplit:  adminOnly
  Internal command, which is sent by a shard to the sharding config server. Do not call directly. Receives, validates, and processes a SplitChunkRequest.
_configsvrCommitChunksMerge:  adminOnly
  Internal command, which is sent by a shard to the sharding config server. Do not call directly. Receives, validates, and processes a MergeChunksRequest
_configsvrCommitMovePrimary:  adminOnly
  should not be calling this directly
_configsvrCommitReshardCollection:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Allows a reshard operation to enter critical section ASAP.
_configsvrCreateDatabase:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Create a database.
_configsvrDropCollection:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Drops a collection from a database.
_configsvrDropDatabase:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Drops a database.
_configsvrEnableSharding:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Enable sharding on a database.
_configsvrEnsureChunkVersionIsGreaterThan:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly.
_configsvrMoveChunk:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Requests the balancer to move or rebalance a single chunk.
_configsvrMovePrimary:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Reassigns the primary shard of a database.
_configsvrRefineCollectionShardKey:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Adds a suffix to the shard key of an existing collection ('refines the shard key').
_configsvrRemoveChunks:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Removes the chunks for the specified collectionUUID.
_configsvrRemoveShard:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Removes a shard from the cluster.
_configsvrRemoveShardFromZone:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Validates and removes the shard from the zone.
_configsvrRemoveTags:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Removes the zone tags for the specified ns.
_configsvrRenameCollectionMetadata:
  Internal command. Do not call directly. Renames a collection.
_configsvrRepairShardedCollectionChunksHistory:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly.
_configsvrReshardCollection:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Reshards a collection on a new shard key.
_configsvrSetAllowMigrations:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Sets the allowMigrations flag on the specified collection.
_configsvrShardCollection:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Shards a collection. Requires key. Optional unique. Sharding must already be enabled for the database
_configsvrUpdateZoneKeyRange:  adminOnly
  Internal command, which is exported by the sharding config server. Do not call directly. Validates and assigns a new range to a zone.
_flushDatabaseCacheUpdates:  adminOnly
  Internal command which waits for any pending routing table cache updates for a particular database to be written locally. The operationTime returned in the response metadata is guaranteed to be at least as late as the last routing table cache update to the local disk. Takes a 'forceRemoteRefresh' option to make this node refresh its cache from the config server before waiting for the last refresh to be persisted.
_flushDatabaseCacheUpdatesWithWriteConcern:  adminOnly
  Internal command which waits for any pending routing table cache updates for a particular database to be written locally. The operationTime returned in the response metadata is guaranteed to be at least as late as the last routing table cache update to the local disk. Takes a 'forceRemoteRefresh' option to make this node refresh its cache from the config server before waiting for the last refresh to be persisted.
_flushReshardingStateChange:  adminOnly
  Internal command used by the resharding coordinator to flush state changes to the participant shards while the critical section is active.
_flushRoutingTableCacheUpdates:  adminOnly
  Internal command which waits for any pending routing table cache updates for a particular namespace to be written locally. The operationTime returned in the response metadata is guaranteed to be at least as late as the last routing table cache update to the local disk. Takes a 'forceRemoteRefresh' option to make this node refresh its cache from the config server before waiting for the last refresh to be persisted.
_flushRoutingTableCacheUpdatesWithWriteConcern:  adminOnly
  Internal command which waits for any pending routing table cache updates for a particular namespace to be written locally. The operationTime returned in the response metadata is guaranteed to be at least as late as the last routing table cache update to the local disk. Takes a 'forceRemoteRefresh' option to make this node refresh its cache from the config server before waiting for the last refresh to be persisted.
_getNextSessionMods:  adminOnly
  internal
_getUserCacheGeneration:  adminOnly  secondaryOk
  no help defined
_isSelf:  secondaryOk
  { _isSelf : 1 } INTERNAL ONLY
_killOperations:  adminOnly  secondaryOk
  Internal command -- Kill operations on the target server by OperationKey.
_mergeAuthzCollections:  adminOnly
  no help defined
_migrateClone:  adminOnly
  internal
_recvChunkAbort:  adminOnly
  internal
_recvChunkCommit:  adminOnly
  internal
_recvChunkStart:  adminOnly
  internal
_recvChunkStatus:  adminOnly
  internal
_shardsvrAbortReshardCollection:  adminOnly
  Internal command, which is exported by the shard server. Do not call directly. Aborts any in-progress resharding operations.
_shardsvrCleanupReshardCollection:  adminOnly
  Internal command, which is exported by the shard server. Do not call directly. Aborts and cleans up any in-progress resharding operations for this collection.
_shardsvrCloneCatalogData:  adminOnly
  no help defined
_shardsvrCommitReshardCollection:  adminOnly
  Internal command, which is exported by the shard server. Do not call directly. Commits an in-progress resharding operations
_shardsvrCreateCollection:
  Internal command. Do not call directly. Creates a collection.
_shardsvrCreateCollectionParticipant:
  Internal command. Do not call directly. Creates a collection.
_shardsvrDropCollection:
  Internal command, which is exported by the primary sharding server. Do not call directly. Drops a collection.
_shardsvrDropCollectionIfUUIDNotMatching:
  Internal command aimed to remove stale entries from the local collection catalog.
_shardsvrDropCollectionParticipant:
  Internal command, which is exported by secondary sharding servers. Do not call directly. Participates in droping a collection.
_shardsvrDropDatabase:
  Internal command, which is exported by the primary sharding server. Do not call directly. Drops a database.
_shardsvrDropDatabaseParticipant:
  Internal command, which is exported by secondary sharding servers. Do not call directly. Participates in droping a database.
_shardsvrMovePrimary:  adminOnly
  should not be calling this directly
_shardsvrRefineCollectionShardKey:
  Internal command, which is exported by the primary sharding server. Do not call directly. Refines Collection shard key.
_shardsvrRenameCollection:
  Internal command. Do not call directly. Renames a collection.
_shardsvrRenameCollectionParticipant:
  Internal command. Do not call directly. Locally renames a collection.
_shardsvrRenameCollectionParticipantUnblock:
  Internal command. Do not call directly. Releases the critical section of source and target collections.
_shardsvrReshardCollection:  adminOnly
  Internal command. Do not call directly. Reshards a collection.
_shardsvrReshardingOperationTime:  adminOnly
  Internal command used by the resharding coordinator to query the elapsed and remaining time for the active resharding operation on participant shards.
_shardsvrSetAllowMigrations:
  Internal command. Do not call directly. Enable/disable migrations in a collection.
_shardsvrShardCollection:  adminOnly
  should not be calling this directly
_transferMods:  adminOnly
  internal
abortTransaction:  adminOnly
  Aborts a transaction
aggregate:
  Runs the aggregation command. See http://dochub.mongodb.org/core/aggregation for more details.
appendOplogNote:  adminOnly
  Adds a no-op entry to the oplog
applyOps:
  internal (sharding)
  { applyOps : [ ] , preCondition : [ { ns : ... , q : ... , res : ... } ] }
authenticate:  secondaryOk
  no help defined
autoSplitVector:
  Internal command returning the split points for a chunk, given the maximum chunk size.
availableQueryOptions:  secondaryOk
  no help defined
buildInfo:  secondaryOk
  get version #, etc.
  { buildinfo:1 }
checkShardingIndex:
  Internal command.

cleanupOrphaned:  adminOnly
  no help defined
cloneCollectionAsCapped:
  { cloneCollectionAsCapped:<fromName>, toCollection:<toName>, size:<sizeInBytes> }
collMod:
  Sets collection options.
  Example: { collMod: 'foo', viewOn: 'bar'} Example: { collMod: 'foo', index: {keyPattern: {a: 1}, expireAfterSeconds: 600} Example: { collMod: 'foo', index: {name: 'bar', expireAfterSeconds: 600} }

collStats:  secondaryOk
  { collStats:"blog.posts" , scale : 1 } scale divides sizes e.g. for KB use 1024
      avgObjSize - in bytes
commitTransaction:  adminOnly
  Commits a transaction
compact:  secondaryOk
  compact collection
  warning: this operation locks the database and is slow. you can cancel with killOp()
  { compact : <collection_name>, [force:<bool>] }
    force - allows to run on a replica set primary

connPoolStats:  secondaryOk
  stats about connections between servers in a replica set or sharded cluster.
connPoolSync:  secondaryOk
  internal
connectionStatus:  secondaryOk
  Returns connection-specific information such as logged-in users and their roles
convertToCapped:
  { convertToCapped:<fromCollectionName>, size:<sizeInBytes> }
coordinateCommitTransaction:  adminOnly
  Coordinates the commit for a transaction. Only called by mongos.
count:
  count objects in collection
create:
  explicitly creates a collection or view
  {
    create: <string: collection or view name> [,
    capped: <bool: capped collection>,
    autoIndexId: <bool: automatic creation of _id index>,
    idIndex: <document: _id index specification>,
    size: <int: size in bytes of the capped collection>,
    max: <int: max number of documents in the capped collection>,
    storageEngine: <document: storage engine configuration>,
    validator: <document: validation rules>,
    validationLevel: <string: validation level>,
    validationAction: <string: validation action>,
    indexOptionDefaults: <document: default configuration for indexes>,
    viewOn: <string: name of source collection or view>,
    pipeline: <array<object>: aggregation pipeline stage>,
    collation: <document: default collation for the collection or view>,
    writeConcern: <document: write concern expression for the operation>]
  }
createIndexes:
  no help defined
createRole:
  no help defined
createUser:
  no help defined
currentOp:  adminOnly  secondaryOk
  no help defined
dataSize:  secondaryOk
  determine data size for a set of data in a certain range
  example: { dataSize:"blog.posts", keyPattern:{x:1}, min:{x:10}, max:{x:55} }
  min and max parameters are optional. They must either both be included or both omitted
  keyPattern is an optional parameter indicating an index pattern that would be usefulfor iterating over the min/max bounds. If keyPattern is omitted, it is inferred from the structure of min.
  note: This command may take a while to run
dbCheck:
  Validate replica set consistency.
  Invoke with { dbCheck: <collection name/uuid>,
                minKey: <first key, exclusive>,
                maxKey: <last key, inclusive>,
                maxCount: <max number of docs>,
                maxSize: <max size of docs>,
                maxCountPerSecond: <max rate in docs/sec>
                maxDocsPerBatch: <max number of docs/batch>
                maxBytesPerBatch: <try to keep a batch within max bytes/batch>
                maxBatchTimeMillis: <max time processing a batch in milliseconds>
                readTimestamp: <bool, read at a timestamp without strong locks> }
  to check a collection.
  Invoke with {dbCheck: 1} to check all collections in the database.
dbHash:  secondaryOk
  no help defined
dbStats:  secondaryOk
  Get stats on a database. Not instantaneous. Slower for databases with large .ns files.
  Example: { dbStats:1, scale:1 }
delete:
  delete documents
distinct:
  { distinct : 'collection name' , key : 'a.b' , query : {} }
donorAbortMigration:  adminOnly
  Abort a migration
donorForgetMigration:  adminOnly
  Forget a migration
donorStartMigration:  adminOnly
  Start migrating databases whose names match the specified prefix to the specified replica set.
driverOIDTest:  secondaryOk
  no help defined
drop:
  drop a collection
  {drop : <collectionName>}
dropAllRolesFromDatabase:
  no help defined
dropAllUsersFromDatabase:
  no help defined
dropConnections:  adminOnly  secondaryOk
  Drop egress connections to specified host and port
dropDatabase:
  drop (delete) this database
dropIndexes:
  drop indexes for a collection
dropRole:
  no help defined
dropUser:
  no help defined
endSessions:  secondaryOk
  end a set of logical sessions
explain:
  explain database reads and writes
features:  secondaryOk
  return build level feature settings
filemd5:  secondaryOk
   example: { filemd5 : ObjectId(aaaaaaa) , root : "fs" }
find:
  query for documents
findAndModify:
  { findAndModify: "collection", query: {processed:false}, update: {$set: {processed:true}}, new: true}
  { findAndModify: "collection", query: {processed:false}, remove: true, sort: {priority:-1}}
  Either update or remove is required, all other fields have default values.
  Output is in the "value" field

flushRouterConfig:  adminOnly  secondaryOk
  Flushes the cached routing information for a single collection, entire database (and its collections) or all databases, which would cause full reload from the config server on the next access.
  Usage:
  {flushRouterConfig: 1} flushes all databases
  {flushRouterConfig: 'db'} flushes only the given database (and its collections)
  {flushRouterconfig: 'db.coll'} flushes only the given collection
fsync:  adminOnly  secondaryOk
  http://dochub.mongodb.org/core/fsynccommand
fsyncUnlock:  adminOnly  secondaryOk
  no help defined
getCmdLineOpts:  adminOnly  secondaryOk
  get argv
getDatabaseVersion:  adminOnly  secondaryOk
   example: { getDatabaseVersion : 'foo'  }
getDefaultRWConcern:  adminOnly  secondaryOk
  get the current read/write concern defaults being applied by this node
getDiagnosticData:  adminOnly  secondaryOk
  get latest diagnostic data collection snapshot
getLastError:  secondaryOk
  return error status of the last operation on this connection
  options:
    { fsync:true } - fsync before returning, or wait for journal commit if running with --journal
    { j:true } - wait for journal commit if running with --journal
    { w:n } - await replication to n servers (including self) before returning
    { w:'majority' } - await replication to majority of set
    { wtimeout:m} - timeout for w in m milliseconds
getLog:  adminOnly  secondaryOk
  { getLog : '*' }  OR { getLog : 'global' }
getMore:  secondaryOk
  retrieve more results from an existing cursor
getParameter:  adminOnly  secondaryOk
  get administrative option(s)
  example:
  { getParameter:1, notablescan:1 }
  pass a document as the value for getParameter to request options
  example:
  { getParameter:{showDetails: true}, notablescan:1}
  supported:
    AlwaysRecordTraffic
    KeysRotationIntervalSec
    ShardingTaskExecutorPoolHostTimeoutMS
    ShardingTaskExecutorPoolMaxConnecting
    ShardingTaskExecutorPoolMaxSize
    ShardingTaskExecutorPoolMaxSizeForConfigServers
    ShardingTaskExecutorPoolMinSize
    ShardingTaskExecutorPoolMinSizeForConfigServers
    ShardingTaskExecutorPoolRefreshRequirementMS
    ShardingTaskExecutorPoolRefreshTimeoutMS
    ShardingTaskExecutorPoolReplicaSetMatching
    TransactionRecordMinimumLifetimeMinutes
    acceptApiVersion2
    aggregateOperationResourceConsumptionMetrics
    allowDocumentsGreaterThanMaxUserSize
    allowRolesFromX509Certificates
    authSchemaVersion
    authenticationMechanisms
    authorizationManagerCacheSize
    authorizationManagerPinnedUsers
    authorizationManagerPinnedUsersRefreshIntervalMillis
    automationServiceDescriptor
    awsEC2InstanceMetadataUrl
    awsECSInstanceMetadataUrl
    balancerMigrationsThrottlingMs
    bgSyncOplogFetcherBatchSize
    changeSyncSourceThresholdMillis
    chunkMigrationConcurrency
    chunkMigrationFetcherMaxBufferedSizeBytesPerThread
    clientCursorMonitorFrequencySecs
    clusterAuthMode
    collectionBulkLoaderBatchSizeInBytes
    collectionClonerBatchSize
    collectionClonerUsesExhaust
    connPoolMaxConnsPerHost
    connPoolMaxInUseConnsPerHost
    connectTimeoutMs
    coordinateCommitReturnImmediatelyAfterPersistingDecision
    createRollbackDataFiles
    cursorTimeoutMillis
    dbCheckCollectionTryLockMaxAttempts
    dbCheckCollectionTryLockMaxBackoffMillis
    dbCheckCollectionTryLockMinBackoffMillis
    dbCheckCollectionTryLockTimeoutMillis
    dbCheckHealthLogEveryNBatches
    deprecatedWireOpsWarningPeriodInSeconds
    diagnosticDataCollectionDirectoryPath
    diagnosticDataCollectionDirectorySizeMB
    diagnosticDataCollectionEnableLatencyHistograms
    diagnosticDataCollectionEnabled
    diagnosticDataCollectionFileSizeMB
    diagnosticDataCollectionPeriodMillis
    diagnosticDataCollectionSamplesPerChunk
    diagnosticDataCollectionSamplesPerInterimUpdate
    diagnosticDataCollectionStatsNamespaces
    diagnosticDataCollectionVerboseTCMalloc
    disableJavaScriptJIT
    disableLogicalSessionCacheRefresh
    disableNonSSLConnectionLogging
    disableNonTLSConnectionLogging
    disableResumableRangeDeleter
    disableSplitHorizonIPCheck
    disabledSecureAllocatorDomains
    documentUnitSizeBytes
    enableDefaultWriteConcernUpdatesForInitiate
    enableElectionHandoff
    enableFinerGrainedCatalogCacheRefresh
    enableFlowControl
    enableIndexBuildCommitQuorum
    enableLocalhostAuthBypass
    enableOverrideClusterChainingSetting
    enableReconfigRollbackCommittedWritesCheck
    enableResumableIndexBuilds
    enableSearchMeta
    enableShardedIndexConsistencyCheck
    enableTestCommands
    enableTimeoutOfInactiveSessionCursors
    enforceUserClusterSeparation
    fassertOnLockTimeoutForStepUpDown
    featureCompatibilityVersion
    featureFlagBlender
    featureFlagBucketUnpackWithSort50
    featureFlagChangeStreamsOptimization
    featureFlagConcurrencyInChunkMigration
    featureFlagDefaultReadConcernLocal
    featureFlagDefaultWriteConcernMajority
    featureFlagDotsAndDollars
    featureFlagFryer
    featureFlagHealthMonitoring
    featureFlagLoadBalancer
    featureFlagLockFreeReads
    featureFlagResharding
    featureFlagRetryableFindAndModify
    featureFlagSearchBatchSizeLimit
    featureFlagSearchMeta
    featureFlagShardKeyIndexOptionalHashedSharding
    featureFlagShardedTimeSeries
    featureFlagShardedTimeSeriesUpdateDelete
    featureFlagShardingFullDDLSupport
    featureFlagSpoon
    featureFlagTenantMigrations
    featureFlagTimeseriesCollection
    featureFlagTimeseriesUpdatesAndDeletes
    featureFlagToaster
    featureFlagUseSecondaryDelaySecs
    findChunksOnConfigTimeoutMS
    fixedServiceExecutorRecursionLimit
    fixedServiceExecutorThreadLimit
    flowControlDecayConstant
    flowControlFudgeFactor
    flowControlMaxSamples
    flowControlMinTicketsPerSecond
    flowControlSamplePeriod
    flowControlTargetLagSeconds
    flowControlThresholdLagPercentage
    flowControlTicketAdderConstant
    flowControlTicketMultiplierConstant
    flowControlWarnThresholdSeconds
    forceRollbackViaRefetch
    globalConnPoolIdleTimeoutMinutes
    heartBeatFrequencyMs
    httpVerboseLogging
    indexEntryUnitSizeBytes
    initialServiceExecutorThreadingModel
    initialSyncOplogBuffer
    initialSyncOplogBufferPeekCacheSize
    initialSyncOplogFetcherBatchSize
    initialSyncSourceReadPreference
    initialSyncTransientErrorRetryPeriodSeconds
    internalDocumentSourceCursorBatchSizeBytes
    internalDocumentSourceGroupMaxMemoryBytes
    internalDocumentSourceLookupCacheSizeBytes
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes
    internalGeoNearQuery2DMaxCoveringCells
    internalGeoPredicateQuery2DMaxCoveringCells
    internalIndexBuildBulkLoadYieldIterations
    internalInsertMaxBatchSize
    internalLookupStageIntermediateDocumentMaxSizeBytes
    internalPipelineLengthLimit
    internalProhibitShardOperationRetry
    internalQueryAllowShardedLookup
    internalQueryAlwaysMergeOnPrimaryShard
    internalQueryAppendIdToSetWindowFieldsSort
    internalQueryCacheDisableInactiveEntries
    internalQueryCacheEvictionRatio
    internalQueryCacheMaxEntriesPerCollection
    internalQueryCacheMaxSizeBytesBeforeStripDebugInfo
    internalQueryCacheSize
    internalQueryCacheWorksGrowthCoefficient
    internalQueryDefaultDOP
    internalQueryDesugarWhereToFunction
    internalQueryDisableExchange
    internalQueryDocumentSourceWriterBatchExtraReservedBytes
    internalQueryEnableCSTParser
    internalQueryEnableLoggingV2OplogEntries
    internalQueryEnableSlotBasedExecutionEngine
    internalQueryEnumerationMaxIntersectPerAnd
    internalQueryEnumerationMaxOrSolutions
    internalQueryEnumerationPreferLockstepOrEnumeration
    internalQueryExecYieldIterations
    internalQueryExecYieldPeriodMS
    internalQueryExplainSizeThresholdBytes
    internalQueryFacetBufferSizeBytes
    internalQueryFacetMaxOutputDocSizeBytes
    internalQueryForceIntersectionPlans
    internalQueryGlobalProfilingFilter
    internalQueryIgnoreUnknownJSONSchemaKeywords
    internalQueryJavaScriptFnTimeoutMillis
    internalQueryJavaScriptHeapSizeLimitMB
    internalQueryMaxAddToSetBytes
    internalQueryMaxBlockingSortMemoryUsageBytes
    internalQueryMaxDocValidationErrorConsideredValues
    internalQueryMaxJsEmitBytes
    internalQueryMaxPushBytes
    internalQueryMaxRangeBytes
    internalQueryMaxScansToExplode
    internalQueryPlanEvaluationCollFraction
    internalQueryPlanEvaluationMaxResults
    internalQueryPlanEvaluationWorks
    internalQueryPlanOrChildrenIndependently
    internalQueryPlanTieBreakingWithIndexHeuristics
    internalQueryPlannerEnableHashIntersection
    internalQueryPlannerEnableIndexIntersection
    internalQueryPlannerGenerateCoveredWholeIndexScans
    internalQueryPlannerMaxIndexedSolutions
    internalQueryProhibitBlockingMergeOnMongoS
    internalQueryProhibitMergingOnMongoS
    internalQueryS2GeoCoarsestLevel
    internalQueryS2GeoFinestLevel
    internalQueryS2GeoMaxCells
    internalQuerySlotBasedExecutionMaxStaticIndexScanIntervals
    internalValidateFeaturesAsMaster
    internalValidateFeaturesAsPrimary
    javascriptProtection
    journalCommitInterval
    jsHeapLimitMB
    loadBalancerPort
    loadRoutingTableOnStartup
    localLogicalSessionTimeoutMinutes
    localThresholdMs
    logComponentVerbosity
    logLevel
    logicalSessionRefreshMillis
    maxAcceptableLogicalClockDriftSecs
    maxBSONDepth
    maxCatchUpPercentageBeforeBlockingWrites
    maxIndexBuildDrainBatchSize
    maxIndexBuildDrainMemoryUsageMegabytes
    maxIndexBuildMemoryUsageMegabytes
    maxLogSizeKB
    maxNumActiveUserIndexBuilds
    maxNumSyncSourceChangesPerHour
    maxNumberOfTransactionOperationsInSingleOplogEntry
    maxOplogTruncationPointsAfterStartup
    maxOplogTruncationPointsDuringStartup
    maxSessions
    maxSyncSourceLagSecs
    maxTenantMigrationDonorServiceThreadPoolSize
    maxTenantMigrationRecipientThreadPoolSize
    maxTimeMSForHedgedReads
    maxTransactionLockRequestTimeoutMillis
    maxValidateMBperSec
    maxValidateMemoryUsageMB
    metadataRefreshInTransactionMaxWaitBehindCritSecMS
    migrateCloneInsertionBatchDelayMS
    migrateCloneInsertionBatchSize
    migrationLockAcquisitionMaxWaitMS
    minNumChunksForSessionsCollection
    minOplogEntriesPerThread
    minOplogTruncationPoints
    minSnapshotHistoryWindowInSeconds
    mirrorReads
    mongosShutdownTimeoutMillisForSignaledShutdown
    mrEnableSingleReduceOptimization
    newShardExistingClusterTimeKeysExpirationSecs
    notablescan
    numInitialSyncAttempts
    numInitialSyncConnectAttempts
    numInitialSyncOplogFindAttempts
    ocspCacheSize
    ocspEnabled
    ocspStaplingRefreshPeriodSecs
    ocspValidationRefreshPeriodSecs
    opensslCipherConfig
    opensslCipherSuiteConfig
    opensslDiffieHellmanParameters
    operationMemoryPoolBlockInitialSizeKB
    operationMemoryPoolBlockMaxSizeKB
    oplogApplicationEnforcesSteadyStateConstraints
    oplogBatchDelayMillis
    oplogFetcherInitialSyncMaxFetcherRestarts
    oplogFetcherSteadyStateMaxFetcherRestarts
    oplogFetcherUsesExhaust
    oplogInitialFindMaxSeconds
    oplogNetworkTimeoutBufferSeconds
    oplogRetriedFindMaxSeconds
    oplogSamplingLogIntervalSeconds
    oplogTruncationCheckPeriodSeconds
    oplogTruncationPointSizeMB
    opportunisticSecondaryTargeting
    orphanCleanupDelaySecs
    periodicNoopIntervalSecs
    persistedChunkCacheUpdateMaxBatchSize
    priorityTakeoverFreshnessWindowSeconds
    profileOperationResourceConsumptionMetrics
    quiet
    rangeDeleterBatchDelayMS
    rangeDeleterBatchSize
    readHedgingMode
    receiveChunkWaitForRangeDeleterTimeoutMS
    recoverFromOplogAsStandalone
    recoverToOplogTimestamp
    remainingReshardingOperationTimeThresholdMillis
    replBatchLimitBytes
    replBatchLimitOperations
    replElectionTimeoutOffsetLimitFraction
    replWriterMinThreadCount
    replWriterThreadCount
    replicaSetMonitorProtocol
    reportOpWriteConcernCountersInServerStatus
    requireApiVersion
    reservedServiceExecutorRecursionLimit
    reshardingCollectionClonerBatchSizeInBytes
    reshardingCoordinatorServiceMaxThreadCount
    reshardingCriticalSectionTimeoutMillis
    reshardingDonorServiceMaxThreadCount
    reshardingMinimumOperationDurationMillis
    reshardingOplogApplierMaxLockRequestTimeoutMillis
    reshardingOplogBatchLimitBytes
    reshardingOplogBatchLimitOperations
    reshardingOplogBatchTaskCount
    reshardingRecipientServiceMaxThreadCount
    reshardingTxnClonerProgressBatchSize
    resumableIndexBuildMajorityOpTimeTimeoutMillis
    rewriteStateChangeErrors
    roleGraphInvalidationIsFatal
    rollbackRemoteOplogQueryBatchSize
    rollbackTimeLimitSecs
    routingTableCacheChunkBucketSize
    saslHostName
    saslServiceName
    saslauthdPath
    scramIterationCount
    scramSHA256IterationCount
    scriptingEngineInterruptIntervalMS
    shardedIndexConsistencyCheckIntervalMS
    shutdownTimeoutMillisForSignaledShutdown
    skipApplyingDbCheckBatchOnSecondary
    skipCorruptDocumentsWhenCloning
    skipDroppingHashedShardKeyIndex
    skipShardingConfigurationChecks
    skipShellCursorFinalize
    sslMode
    sslWithholdClientCertificate
    startupAuthSchemaValidation
    startupRecoveryForRestore
    storeFindAndModifyImagesInSideCollection
    suppressNoTLSPeerCertificateWarning
    syncdelay
    synchronousServiceExecutorRecursionLimit
    takeUnstableCheckpointOnShutdown
    taskExecutorPoolSize
    tcmallocAggressiveMemoryDecommit
    tcmallocEnableMarkThreadTemporarilyIdle
    tcmallocMaxTotalThreadCacheBytes
    tcmallocReleaseRate
    tcpFastOpenClient
    tcpFastOpenQueueSize
    tcpFastOpenServer
    tenantApplierBatchSizeBytes
    tenantApplierBatchSizeOps
    tenantApplierThreadCount
    tenantMigrationBlockingStateTimeoutMS
    tenantMigrationDisableX509Auth
    tenantMigrationExcludeDonorHostTimeoutMS
    tenantMigrationExternalKeysRemovalBufferSecs
    tenantMigrationGarbageCollectionDelayMS
    tenantMigrationOplogBufferPeekCacheSize
    tenantMigrationOplogFetcherBatchSize
    testingDiagnosticsEnabled
    testingSnapshotBehaviorInIsolation
    timeseriesBucketMaxCount
    timeseriesBucketMaxSize
    timeseriesBucketsCollectionClusterById
    timeseriesIdleBucketExpiryMemoryUsageThreshold
    timeseriesInsertMaxRetriesOnDuplicates
    tlsMode
    tlsOCSPStaplingTimeoutSecs
    tlsOCSPVerifyTimeoutSecs
    tlsUseSystemCA
    tlsWithholdClientCertificate
    tlsX509ClusterAuthDNOverride
    tlsX509ExpirationWarningThresholdDays
    totalUnitWriteSizeBytes
    traceExceptions
    traceWriteConflictExceptions
    trafficRecordingDirectory
    transactionLifetimeLimitSeconds
    transactionSizeLimitBytes
    transactionTooLargeForCacheThreshold
    ttlMonitorEnabled
    ttlMonitorSleepSecs
    unsupportedSyncSource
    useReadOnceCursorsForIndexBuilds
    waitForSecondaryBeforeNoopWriteMS
    warmMinConnectionsInShardingTaskExecutorPoolOnStartup
    warmMinConnectionsInShardingTaskExecutorPoolOnStartupWaitMS
    watchdogPeriodSeconds
    wiredTigerConcurrentReadTransactions
    wiredTigerConcurrentWriteTransactions
    wiredTigerCursorCacheSize
    wiredTigerEngineRuntimeConfig
    wiredTigerFileHandleCloseIdleTime
    wiredTigerFileHandleCloseMinimum
    wiredTigerFileHandleCloseScanInterval
    wiredTigerMaxCacheOverflowSizeGB
    wiredTigerPrefixSearchForUniqueIndexes
    wiredTigerSessionCloseIdleTimeSecs
    wiredTigerSkipTableLoggingChecksOnStartup
    writePeriodicNoops
  { getParameter:'*' } or { getParameter:{allParameters: true} } to get everything

getShardMap:  adminOnly  secondaryOk
  lists the set of shards known to this instance
getShardVersion:  adminOnly  secondaryOk
   example: { getShardVersion : 'alleyinsider.foo'  }
getnonce:  secondaryOk
  internal
grantPrivilegesToRole:
  no help defined
grantRolesToRole:
  no help defined
grantRolesToUser:
  no help defined
hello:  secondaryOk
  Check if this server is primary for a replica set
  { hello : 1 }
hostInfo:  secondaryOk
  returns information about the daemon's host
insert:
  insert documents
internalRenameIfOptionsAndIndexesMatch:  adminOnly
  Internal command to rename and check collection options
invalidateUserCache:  adminOnly  secondaryOk
  no help defined
isMaster:  secondaryOk
  Check if this server is primary for a replica set
  { isMaster : 1 }
killAllSessions:  secondaryOk
  kill all logical sessions, for a user, and their operations
killAllSessionsByPattern:  secondaryOk
  kill logical sessions by pattern
killCursors:  secondaryOk
  Kill a list of cursor ids
killOp:  adminOnly  secondaryOk
  no help defined
killSessions:  secondaryOk
  kill a logical session and its operations
listCollections:
  list collections for this db
listCommands:  secondaryOk
  get a list of all db commands
listDatabases:  adminOnly
  { listDatabases:1, [filter: <filterObject>] [, nameOnly: true ] }
  list databases on this server
listIndexes:
  list indexes for a collection
lockInfo:  adminOnly  secondaryOk
  show all lock info on the server
logRotate:  adminOnly  secondaryOk
  no help defined
logout:  secondaryOk
  de-authenticate
mapReduce:  secondaryOk
  Runs the mapReduce command. See http://dochub.mongodb.org/core/mapreduce for details.
mergeChunks:  adminOnly
  Internal command to merge a contiguous range of chunks.
  Usage: { mergeChunks: <ns>, epoch: <epoch>, bounds: [<min key>, <max key>] }
moveChunk:  adminOnly
  should not be calling this directly
ping:  secondaryOk
  a way to check that the server is alive. responds immediately even if server is in a db lock.
planCacheClear:
  Drops one or all plan cache entries in a collection.
planCacheClearFilters:
  Clears index filter for a single query shape or, if the query shape is omitted, all filters for the collection.
planCacheListFilters:
  Displays index filters for all query shapes in a collection.
planCacheSetFilter:
  Sets index filter for a query shape. Overrides existing filter.
prepareTransaction:  adminOnly
  Prepares a transaction on this shard; sent by a router or re-sent by the transaction commit coordinator for a cross-shard transaction
profile:  secondaryOk
  controls the behaviour of the performance profiler, the fraction of eligible operations which are sampled for logging/profiling, and the threshold duration at which ops become eligible. See http://docs.mongodb.org/manual/reference/command/profile
reIndex:  secondaryOk
  re-index a collection (can only be run on a standalone mongod)
recipientForgetMigration:  adminOnly
  Interrupts tenant migration data sync and marks that the recipient's durable state machine may be garbage collected.
recipientSyncData:  adminOnly
  Internal replica set command; instructs the recipient to sync data as part of a tenant migration.
refreshSessions:  secondaryOk
  renew a set of logical sessions
renameCollection:  adminOnly
   example: { renameCollection: foo.a, to: bar.b }
replSetAbortPrimaryCatchUp:  adminOnly  secondaryOk
  { CmdReplSetAbortPrimaryCatchUp : 1 }
  Abort primary catch-up mode; immediately finish the transition to primary without fetching any further unreplicated writes from any other online nodes
replSetFreeze:  adminOnly  secondaryOk
  { replSetFreeze : <seconds> }
  'freeze' state of member to the extent we can do that.  What this really means is that
  this node will not attempt to become primary until the time period specified expires.
  You can call again with {replSetFreeze:0} to unfreeze sooner.
  A process restart unfreezes the member also.
  http://dochub.mongodb.org/core/replicasetcommands
replSetGetConfig:  adminOnly  secondaryOk
  Returns the current replica set configuration{ replSetGetConfig : 1 }
  http://dochub.mongodb.org/core/replicasetcommands
replSetGetRBID:  adminOnly  secondaryOk
  no help defined
replSetGetStatus:  adminOnly  secondaryOk
  Report status of a replica set from the POV of this server
  { replSetGetStatus : 1 }
  http://dochub.mongodb.org/core/replicasetcommands
replSetHeartbeat:  adminOnly  secondaryOk
  no help defined
replSetInitiate:  adminOnly  secondaryOk
  Initiate/christen a replica set.
  http://dochub.mongodb.org/core/replicasetcommands
replSetMaintenance:  adminOnly  secondaryOk
  { replSetMaintenance : bool }
  Enable or disable maintenance mode.
replSetReconfig:  adminOnly  secondaryOk
  Adjust configuration of a replica set
  { replSetReconfig : config_object }
  http://dochub.mongodb.org/core/replicasetcommands
replSetRequestVotes:  adminOnly  secondaryOk
  no help defined
replSetResizeOplog:  adminOnly  secondaryOk
  Resize oplog using size (in MBs) and optionally, retention (in terms of hours)
replSetStepDown:  adminOnly  secondaryOk
  { replSetStepDown : <seconds> }
  Step down as primary.  Will not try to reelect self for the specified time period (1 minute if no numeric secs value specified, or secs is 0).
  (If another member with same priority takes over in the meantime, it will stay primary.)
  http://dochub.mongodb.org/core/replicasetcommands
replSetStepUp:  adminOnly  secondaryOk
  no help defined
replSetSyncFrom:  adminOnly  secondaryOk
  { replSetSyncFrom : "host:port" }
  Change who this member is syncing from. Note: This will interrupt and restart an in-progress initial sync.
replSetUpdatePosition:  adminOnly  secondaryOk
  no help defined
revokePrivilegesFromRole:
  no help defined
revokeRolesFromRole:
  no help defined
revokeRolesFromUser:
  no help defined
rolesInfo:
  no help defined
rotateCertificates:  adminOnly  secondaryOk
  Rotate certificates for new SSL connections
saslContinue:  secondaryOk
  Subsequent steps in a SASL authentication conversation.
saslStart:  secondaryOk
  First step in a SASL authentication conversation.
serverStatus:  secondaryOk
  returns lots of administrative server statistics
setDefaultRWConcern:  adminOnly
  set the current read/write concern defaults (cluster-wide)
setFeatureCompatibilityVersion:  adminOnly
  Set the featureCompatibilityVersion used by this cluster. If set to '4.4', then features introduced in versions greater than '4.4' will be disabled If set to '4.9', then features introduced in '5.0' will be disabled. If set to '5.0', then '5.0' features are enabled, and all nodes in the cluster must be binary version 5.0. See https://docs.mongodb.com/master/release-notes/4.4-compatibility/#feature-compatibility.
setIndexCommitQuorum:
  Resets the commitQuorum for the given index builds in a collection. Usage:
  {
      setIndexCommitQuorum: <string> collection name,
      indexNames: array<string> list of index names,
      commitQuorum: <string|number|object> option to define the required quorum for
                    the index builds to commit
  }
setParameter:  adminOnly  secondaryOk
  set administrative option(s)
  { setParameter:1, <param>:<value> }
  supported:
    AlwaysRecordTraffic
    KeysRotationIntervalSec
    ShardingTaskExecutorPoolHostTimeoutMS
    ShardingTaskExecutorPoolMaxConnecting
    ShardingTaskExecutorPoolMaxSize
    ShardingTaskExecutorPoolMaxSizeForConfigServers
    ShardingTaskExecutorPoolMinSize
    ShardingTaskExecutorPoolMinSizeForConfigServers
    ShardingTaskExecutorPoolRefreshRequirementMS
    ShardingTaskExecutorPoolRefreshTimeoutMS
    ShardingTaskExecutorPoolReplicaSetMatching
    TransactionRecordMinimumLifetimeMinutes
    acceptApiVersion2
    aggregateOperationResourceConsumptionMetrics
    allowDocumentsGreaterThanMaxUserSize
    allowRolesFromX509Certificates
    authSchemaVersion
    authenticationMechanisms
    authorizationManagerCacheSize
    authorizationManagerPinnedUsers
    authorizationManagerPinnedUsersRefreshIntervalMillis
    automationServiceDescriptor
    awsEC2InstanceMetadataUrl
    awsECSInstanceMetadataUrl
    balancerMigrationsThrottlingMs
    bgSyncOplogFetcherBatchSize
    changeSyncSourceThresholdMillis
    chunkMigrationConcurrency
    chunkMigrationFetcherMaxBufferedSizeBytesPerThread
    clientCursorMonitorFrequencySecs
    clusterAuthMode
    collectionBulkLoaderBatchSizeInBytes
    collectionClonerBatchSize
    collectionClonerUsesExhaust
    connPoolMaxConnsPerHost
    connPoolMaxInUseConnsPerHost
    connectTimeoutMs
    coordinateCommitReturnImmediatelyAfterPersistingDecision
    createRollbackDataFiles
    cursorTimeoutMillis
    dbCheckCollectionTryLockMaxAttempts
    dbCheckCollectionTryLockMaxBackoffMillis
    dbCheckCollectionTryLockMinBackoffMillis
    dbCheckCollectionTryLockTimeoutMillis
    dbCheckHealthLogEveryNBatches
    deprecatedWireOpsWarningPeriodInSeconds
    diagnosticDataCollectionDirectoryPath
    diagnosticDataCollectionDirectorySizeMB
    diagnosticDataCollectionEnableLatencyHistograms
    diagnosticDataCollectionEnabled
    diagnosticDataCollectionFileSizeMB
    diagnosticDataCollectionPeriodMillis
    diagnosticDataCollectionSamplesPerChunk
    diagnosticDataCollectionSamplesPerInterimUpdate
    diagnosticDataCollectionStatsNamespaces
    diagnosticDataCollectionVerboseTCMalloc
    disableJavaScriptJIT
    disableLogicalSessionCacheRefresh
    disableNonSSLConnectionLogging
    disableNonTLSConnectionLogging
    disableResumableRangeDeleter
    disableSplitHorizonIPCheck
    disabledSecureAllocatorDomains
    documentUnitSizeBytes
    enableDefaultWriteConcernUpdatesForInitiate
    enableElectionHandoff
    enableFinerGrainedCatalogCacheRefresh
    enableFlowControl
    enableIndexBuildCommitQuorum
    enableLocalhostAuthBypass
    enableOverrideClusterChainingSetting
    enableReconfigRollbackCommittedWritesCheck
    enableResumableIndexBuilds
    enableSearchMeta
    enableShardedIndexConsistencyCheck
    enableTestCommands
    enableTimeoutOfInactiveSessionCursors
    enforceUserClusterSeparation
    fassertOnLockTimeoutForStepUpDown
    featureCompatibilityVersion
    featureFlagBlender
    featureFlagBucketUnpackWithSort50
    featureFlagChangeStreamsOptimization
    featureFlagConcurrencyInChunkMigration
    featureFlagDefaultReadConcernLocal
    featureFlagDefaultWriteConcernMajority
    featureFlagDotsAndDollars
    featureFlagFryer
    featureFlagHealthMonitoring
    featureFlagLoadBalancer
    featureFlagLockFreeReads
    featureFlagResharding
    featureFlagRetryableFindAndModify
    featureFlagSearchBatchSizeLimit
    featureFlagSearchMeta
    featureFlagShardKeyIndexOptionalHashedSharding
    featureFlagShardedTimeSeries
    featureFlagShardedTimeSeriesUpdateDelete
    featureFlagShardingFullDDLSupport
    featureFlagSpoon
    featureFlagTenantMigrations
    featureFlagTimeseriesCollection
    featureFlagTimeseriesUpdatesAndDeletes
    featureFlagToaster
    featureFlagUseSecondaryDelaySecs
    findChunksOnConfigTimeoutMS
    fixedServiceExecutorRecursionLimit
    fixedServiceExecutorThreadLimit
    flowControlDecayConstant
    flowControlFudgeFactor
    flowControlMaxSamples
    flowControlMinTicketsPerSecond
    flowControlSamplePeriod
    flowControlTargetLagSeconds
    flowControlThresholdLagPercentage
    flowControlTicketAdderConstant
    flowControlTicketMultiplierConstant
    flowControlWarnThresholdSeconds
    forceRollbackViaRefetch
    globalConnPoolIdleTimeoutMinutes
    heartBeatFrequencyMs
    httpVerboseLogging
    indexEntryUnitSizeBytes
    initialServiceExecutorThreadingModel
    initialSyncOplogBuffer
    initialSyncOplogBufferPeekCacheSize
    initialSyncOplogFetcherBatchSize
    initialSyncSourceReadPreference
    initialSyncTransientErrorRetryPeriodSeconds
    internalDocumentSourceCursorBatchSizeBytes
    internalDocumentSourceGroupMaxMemoryBytes
    internalDocumentSourceLookupCacheSizeBytes
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes
    internalGeoNearQuery2DMaxCoveringCells
    internalGeoPredicateQuery2DMaxCoveringCells
    internalIndexBuildBulkLoadYieldIterations
    internalInsertMaxBatchSize
    internalLookupStageIntermediateDocumentMaxSizeBytes
    internalPipelineLengthLimit
    internalProhibitShardOperationRetry
    internalQueryAllowShardedLookup
    internalQueryAlwaysMergeOnPrimaryShard
    internalQueryAppendIdToSetWindowFieldsSort
    internalQueryCacheDisableInactiveEntries
    internalQueryCacheEvictionRatio
    internalQueryCacheMaxEntriesPerCollection
    internalQueryCacheMaxSizeBytesBeforeStripDebugInfo
    internalQueryCacheSize
    internalQueryCacheWorksGrowthCoefficient
    internalQueryDefaultDOP
    internalQueryDesugarWhereToFunction
    internalQueryDisableExchange
    internalQueryDocumentSourceWriterBatchExtraReservedBytes
    internalQueryEnableCSTParser
    internalQueryEnableLoggingV2OplogEntries
    internalQueryEnableSlotBasedExecutionEngine
    internalQueryEnumerationMaxIntersectPerAnd
    internalQueryEnumerationMaxOrSolutions
    internalQueryEnumerationPreferLockstepOrEnumeration
    internalQueryExecYieldIterations
    internalQueryExecYieldPeriodMS
    internalQueryExplainSizeThresholdBytes
    internalQueryFacetBufferSizeBytes
    internalQueryFacetMaxOutputDocSizeBytes
    internalQueryForceIntersectionPlans
    internalQueryGlobalProfilingFilter
    internalQueryIgnoreUnknownJSONSchemaKeywords
    internalQueryJavaScriptFnTimeoutMillis
    internalQueryJavaScriptHeapSizeLimitMB
    internalQueryMaxAddToSetBytes
    internalQueryMaxBlockingSortMemoryUsageBytes
    internalQueryMaxDocValidationErrorConsideredValues
    internalQueryMaxJsEmitBytes
    internalQueryMaxPushBytes
    internalQueryMaxRangeBytes
    internalQueryMaxScansToExplode
    internalQueryPlanEvaluationCollFraction
    internalQueryPlanEvaluationMaxResults
    internalQueryPlanEvaluationWorks
    internalQueryPlanOrChildrenIndependently
    internalQueryPlanTieBreakingWithIndexHeuristics
    internalQueryPlannerEnableHashIntersection
    internalQueryPlannerEnableIndexIntersection
    internalQueryPlannerGenerateCoveredWholeIndexScans
    internalQueryPlannerMaxIndexedSolutions
    internalQueryProhibitBlockingMergeOnMongoS
    internalQueryProhibitMergingOnMongoS
    internalQueryS2GeoCoarsestLevel
    internalQueryS2GeoFinestLevel
    internalQueryS2GeoMaxCells
    internalQuerySlotBasedExecutionMaxStaticIndexScanIntervals
    internalValidateFeaturesAsMaster
    internalValidateFeaturesAsPrimary
    javascriptProtection
    journalCommitInterval
    jsHeapLimitMB
    loadBalancerPort
    loadRoutingTableOnStartup
    localLogicalSessionTimeoutMinutes
    localThresholdMs
    logComponentVerbosity
    logLevel
    logicalSessionRefreshMillis
    maxAcceptableLogicalClockDriftSecs
    maxBSONDepth
    maxCatchUpPercentageBeforeBlockingWrites
    maxIndexBuildDrainBatchSize
    maxIndexBuildDrainMemoryUsageMegabytes
    maxIndexBuildMemoryUsageMegabytes
    maxLogSizeKB
    maxNumActiveUserIndexBuilds
    maxNumSyncSourceChangesPerHour
    maxNumberOfTransactionOperationsInSingleOplogEntry
    maxOplogTruncationPointsAfterStartup
    maxOplogTruncationPointsDuringStartup
    maxSessions
    maxSyncSourceLagSecs
    maxTenantMigrationDonorServiceThreadPoolSize
    maxTenantMigrationRecipientThreadPoolSize
    maxTimeMSForHedgedReads
    maxTransactionLockRequestTimeoutMillis
    maxValidateMBperSec
    maxValidateMemoryUsageMB
    metadataRefreshInTransactionMaxWaitBehindCritSecMS
    migrateCloneInsertionBatchDelayMS
    migrateCloneInsertionBatchSize
    migrationLockAcquisitionMaxWaitMS
    minNumChunksForSessionsCollection
    minOplogEntriesPerThread
    minOplogTruncationPoints
    minSnapshotHistoryWindowInSeconds
    mirrorReads
    mongosShutdownTimeoutMillisForSignaledShutdown
    mrEnableSingleReduceOptimization
    newShardExistingClusterTimeKeysExpirationSecs
    notablescan
    numInitialSyncAttempts
    numInitialSyncConnectAttempts
    numInitialSyncOplogFindAttempts
    ocspCacheSize
    ocspEnabled
    ocspStaplingRefreshPeriodSecs
    ocspValidationRefreshPeriodSecs
    opensslCipherConfig
    opensslCipherSuiteConfig
    opensslDiffieHellmanParameters
    operationMemoryPoolBlockInitialSizeKB
    operationMemoryPoolBlockMaxSizeKB
    oplogApplicationEnforcesSteadyStateConstraints
    oplogBatchDelayMillis
    oplogFetcherInitialSyncMaxFetcherRestarts
    oplogFetcherSteadyStateMaxFetcherRestarts
    oplogFetcherUsesExhaust
    oplogInitialFindMaxSeconds
    oplogNetworkTimeoutBufferSeconds
    oplogRetriedFindMaxSeconds
    oplogSamplingLogIntervalSeconds
    oplogTruncationCheckPeriodSeconds
    oplogTruncationPointSizeMB
    opportunisticSecondaryTargeting
    orphanCleanupDelaySecs
    periodicNoopIntervalSecs
    persistedChunkCacheUpdateMaxBatchSize
    priorityTakeoverFreshnessWindowSeconds
    profileOperationResourceConsumptionMetrics
    quiet
    rangeDeleterBatchDelayMS
    rangeDeleterBatchSize
    readHedgingMode
    receiveChunkWaitForRangeDeleterTimeoutMS
    recoverFromOplogAsStandalone
    recoverToOplogTimestamp
    remainingReshardingOperationTimeThresholdMillis
    replBatchLimitBytes
    replBatchLimitOperations
    replElectionTimeoutOffsetLimitFraction
    replWriterMinThreadCount
    replWriterThreadCount
    replicaSetMonitorProtocol
    reportOpWriteConcernCountersInServerStatus
    requireApiVersion
    reservedServiceExecutorRecursionLimit
    reshardingCollectionClonerBatchSizeInBytes
    reshardingCoordinatorServiceMaxThreadCount
    reshardingCriticalSectionTimeoutMillis
    reshardingDonorServiceMaxThreadCount
    reshardingMinimumOperationDurationMillis
    reshardingOplogApplierMaxLockRequestTimeoutMillis
    reshardingOplogBatchLimitBytes
    reshardingOplogBatchLimitOperations
    reshardingOplogBatchTaskCount
    reshardingRecipientServiceMaxThreadCount
    reshardingTxnClonerProgressBatchSize
    resumableIndexBuildMajorityOpTimeTimeoutMillis
    rewriteStateChangeErrors
    roleGraphInvalidationIsFatal
    rollbackRemoteOplogQueryBatchSize
    rollbackTimeLimitSecs
    routingTableCacheChunkBucketSize
    saslHostName
    saslServiceName
    saslauthdPath
    scramIterationCount
    scramSHA256IterationCount
    scriptingEngineInterruptIntervalMS
    shardedIndexConsistencyCheckIntervalMS
    shutdownTimeoutMillisForSignaledShutdown
    skipApplyingDbCheckBatchOnSecondary
    skipCorruptDocumentsWhenCloning
    skipDroppingHashedShardKeyIndex
    skipShardingConfigurationChecks
    skipShellCursorFinalize
    sslMode
    sslWithholdClientCertificate
    startupAuthSchemaValidation
    startupRecoveryForRestore
    storeFindAndModifyImagesInSideCollection
    suppressNoTLSPeerCertificateWarning
    syncdelay
    synchronousServiceExecutorRecursionLimit
    takeUnstableCheckpointOnShutdown
    taskExecutorPoolSize
    tcmallocAggressiveMemoryDecommit
    tcmallocEnableMarkThreadTemporarilyIdle
    tcmallocMaxTotalThreadCacheBytes
    tcmallocReleaseRate
    tcpFastOpenClient
    tcpFastOpenQueueSize
    tcpFastOpenServer
    tenantApplierBatchSizeBytes
    tenantApplierBatchSizeOps
    tenantApplierThreadCount
    tenantMigrationBlockingStateTimeoutMS
    tenantMigrationDisableX509Auth
    tenantMigrationExcludeDonorHostTimeoutMS
    tenantMigrationExternalKeysRemovalBufferSecs
    tenantMigrationGarbageCollectionDelayMS
    tenantMigrationOplogBufferPeekCacheSize
    tenantMigrationOplogFetcherBatchSize
    testingDiagnosticsEnabled
    testingSnapshotBehaviorInIsolation
    timeseriesBucketMaxCount
    timeseriesBucketMaxSize
    timeseriesBucketsCollectionClusterById
    timeseriesIdleBucketExpiryMemoryUsageThreshold
    timeseriesInsertMaxRetriesOnDuplicates
    tlsMode
    tlsOCSPStaplingTimeoutSecs
    tlsOCSPVerifyTimeoutSecs
    tlsUseSystemCA
    tlsWithholdClientCertificate
    tlsX509ClusterAuthDNOverride
    tlsX509ExpirationWarningThresholdDays
    totalUnitWriteSizeBytes
    traceExceptions
    traceWriteConflictExceptions
    trafficRecordingDirectory
    transactionLifetimeLimitSeconds
    transactionSizeLimitBytes
    transactionTooLargeForCacheThreshold
    ttlMonitorEnabled
    ttlMonitorSleepSecs
    unsupportedSyncSource
    useReadOnceCursorsForIndexBuilds
    waitForSecondaryBeforeNoopWriteMS
    warmMinConnectionsInShardingTaskExecutorPoolOnStartup
    warmMinConnectionsInShardingTaskExecutorPoolOnStartupWaitMS
    watchdogPeriodSeconds
    wiredTigerConcurrentReadTransactions
    wiredTigerConcurrentWriteTransactions
    wiredTigerCursorCacheSize
    wiredTigerEngineRuntimeConfig
    wiredTigerFileHandleCloseIdleTime
    wiredTigerFileHandleCloseMinimum
    wiredTigerFileHandleCloseScanInterval
    wiredTigerMaxCacheOverflowSizeGB
    wiredTigerPrefixSearchForUniqueIndexes
    wiredTigerSessionCloseIdleTimeSecs
    wiredTigerSkipTableLoggingChecksOnStartup
    writePeriodicNoops

setProfilingFilterGlobally:  secondaryOk
  updates a global filter that determines which operations are eligible for logging/profiling
setShardVersion:  adminOnly  secondaryOk
  internal
shardingState:  adminOnly  secondaryOk
  no help defined
shutdown:  adminOnly  secondaryOk
  Shuts down the database. Must be run against the admin database and either (1) run from localhost or (2) run while authenticated with the shutdown privilege. If the node is the primary of a replica set, waits up to 'timeoutSecs' for an electable node to be caught up before stepping down. If 'force' is false and no electable node was able to catch up, does not shut down. If the node is in state SECONDARY after the attempted stepdown, any remaining time in 'timeout' is used for quiesce mode, where the database continues to allow operations to run, but directs clients to route new operations to other replica set members.
splitChunk:  adminOnly
  internal command usage only
  example:
   { splitChunk:"db.foo" , keyPattern: {a:1} , min : {a:100} , max: {a:200} { splitKeys : [ {a:150} , ... ]}
splitVector:
  Internal command.
  examples:
    { splitVector : "blog.post" , keyPattern:{x:1} , min:{x:10} , max:{x:20}, maxChunkSize:200 }
    maxChunkSize unit in MBs
    May optionally specify 'maxSplitPoints' and 'maxChunkObjects' to avoid traversing the whole chunk

    { splitVector : "blog.post" , keyPattern:{x:1} , min:{x:10} , max:{x:20}, force: true }
    'force' will produce one split point even if data is small; defaults to false
  NOTE: This command may take a while to run
startRecordingTraffic:  secondaryOk
  no help defined
startSession:  secondaryOk
  start a logical session
stopRecordingTraffic:  secondaryOk
  no help defined
top:  adminOnly  secondaryOk
  usage by collection, in micros
update:
  update documents
updateRole:
  no help defined
updateUser:
  no help defined
usersInfo:
  no help defined
validate:  secondaryOk
  Validate contents of a namespace by scanning its data structures for correctness.
  This is a slow operation.
        Add {full: true} option to do a more thorough check.
        Add {background: true} to validate in the background.
        Add {repair: true} to run repair mode.
  Cannot specify both {full: true, background: true}.
validateDBMetadata:  secondaryOk
  validateDBMetadata checks that the stored metadata of a database/collection is valid within a particular API version. If 'db' parameter is specified, only runs validation against that database, if not the validation will be run againt all dbs. Similarly if 'collection' parameter is specified, the validation is only run against that collection, if not the validation is run against all collections.
voteCommitIndexBuild:  adminOnly
  Internal intra replica set command
waitForFailPoint:  adminOnly  secondaryOk
  wait for a fail point to be entered a certain number of times
whatsmyuri:  secondaryOk
  {whatsmyuri:1}
>
>
> db.getCollectionInfos()
[
        {
                "name" : "client",
                "type" : "collection",
                "options" : {

                },
                "info" : {
                        "readOnly" : false,
                        "uuid" : UUID("f2ca7903-46af-4ab2-ab58-fc967ca51196")
                },
                "idIndex" : {
                        "v" : 2,
                        "key" : {
                                "_id" : 1
                        },
                        "name" : "_id_"
                }
        },
        {
                "name" : "department",
                "type" : "collection",
                "options" : {

                },
                "info" : {
                        "readOnly" : false,
                        "uuid" : UUID("bb217616-e548-4d73-a091-201bd32dc544")
                },
                "idIndex" : {
                        "v" : 2,
                        "key" : {
                                "_id" : 1
                        },
                        "name" : "_id_"
                }
        },
        {
                "name" : "employee",
                "type" : "collection",
                "options" : {

                },
                "info" : {
                        "readOnly" : false,
                        "uuid" : UUID("06adf82b-16e2-4df8-823d-52e5a4a467af")
                },
                "idIndex" : {
                        "v" : 2,
                        "key" : {
                                "_id" : 1
                        },
                        "name" : "_id_"
                }
        }
]
>